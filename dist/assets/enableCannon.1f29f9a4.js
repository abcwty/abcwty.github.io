import{cy as y,cI as f,cJ as c}from"./index.66975801.js";import{P as d}from"./PhysicsUpdate.424dc14a.js";const p=[1,2,4,8,16,32],m=[0,1,2,3,4,5];async function _(e){var a,r;if(e.done)return;y.attach(this.outerObject3d);const{slipperyMaterial:h,defaultMaterial:u,world:n,Body:l,Vec3:s}=await f();if(e.done)return;const t=this.cannonBody=new l({mass:(a=this._mass)!=null?a:1,material:this._slippery?h:u,collisionFilterGroup:p[(r=this._physicsGroup)!=null?r:0],collisionFilterMask:m.filter(i=>{var o;return!((o=this._ignorePhysicsGroups)!=null&&o.includes(i))}).map(i=>p[i]).reduce((i,o)=>i+o,0)});await this.physicsShape(),!e.done&&(this._physics==="2d"&&(t.angularFactor=new s(0,0,1),t.linearFactor=new s(1,1,0)),this._noTumble&&(t.angularFactor=new s(0,0,0)),t.position.copy(this.outerObject3d.position),t.quaternion.copy(this.outerObject3d.quaternion),this.rotationUpdate=new d,this.positionUpdate=new d,n.addBody(t),c.add(this),e.then(()=>{n.removeBody(t),c.delete(this),this.cannonBody=void 0,this.rotationUpdate=void 0,this.positionUpdate=void 0}))}export{_ as default};
