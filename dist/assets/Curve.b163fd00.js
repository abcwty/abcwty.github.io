var m=Object.defineProperty;var v=(o,s,t)=>s in o?m(o,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[s]=t;var r=(o,s,t)=>(v(o,typeof s!="symbol"?s+"":s,t),t);import{db as b,cK as w,dc as A,bP as y,c8 as g,cd as M,cy as d,dd as P,d8 as a,cH as x,de as f,df as B}from"./index.66975801.js";const c=50,h=new WeakMap,p=class extends b{constructor(){super();r(this,"bufferAttribute",new w(new Float32Array(c*3),3));r(this,"curve",new A([],void 0,"catmullrom",.5));const t=new y;t.setAttribute("position",this.bufferAttribute);const e=new g({color:16711680,opacity:.35}),i=new M(t,e);d.add(i),this.then(()=>{t.dispose(),e.dispose(),d.remove(i)})}update(){p.update(this,this)}get points(){return this.curve.points.map(x)}set points(t){this.curve.points=t.map(f),this.update()}addPoint(t){const e=f(t);this.curve.points.push(e),h.set(t,e),this.update()}removePoint(t){const e=h.get(t);!e||(B(this.curve.points,e),this.update())}};let u=p;r(u,"update",P(t=>{const{bufferAttribute:e,curve:i}=t;if(e.needsUpdate=!0,i.points.length<2){for(let n=0;n<c;++n)e.setXYZ(n,0,0,0);return}for(let n=0;n<c;++n){const l=n/(c-1);i.getPoint(l,a),e.setXYZ(n,a.x,a.y,a.z)}}));export{u as default};
